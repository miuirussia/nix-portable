name: "Build and test"
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system: [x86_64, aarch64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Nix Flakes doesn't work on shallow clones
          fetch-depth: 0
          persist-credentials: true

      - name: Install nix
        uses: cachix/install-nix-action@master
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            extra-platforms = ${{ matrix.system }}-linux

      - name: Configure cachix
        uses: cachix/cachix-action@master
        with:
          name: kdevlab-nix-portable
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          image: tonistiigi/binfmt@sha256:8de6f2decb92e9001d094534bf8a92880c175bd5dfb4a9d8579f26f09821cfa2
          platforms: all

      - name: Install binfmt support
        run: sudo apt-get install -y

      - name: Build
        run: nix build -L .#defaultPackage.${{ matrix.system }}-linux

      - name: Archive result
        uses: actions/upload-artifact@v4
        with:
          name: nix-portable-${{ matrix.system }}
          path: result/bin/nix-portable

  test_github:
    name: Test inside github action
    needs: build
    if: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Nix Flakes doesn't work on shallow clones
          fetch-depth: 0

      - name: Install nix
        uses: cachix/install-nix-action@master
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Test
        run: nix run -L .#job-local

  pre-release:
    name: Pre-release
    needs: test_github
    if: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: $GITHUB_WORKSPACE/result

      - name: Move latest tag
        run: |
          set -x

          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          git push origin :refs/tags/latest
          git tag -fa latest -m "Latest pre-release"
          git push origin latest

      - name: Publish pre-release
        uses: softprops/action-gh-release@v2.2.2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "latest"
          name: Development build
          generate_release_notes: true
          prerelease: true
          draft: false
          files: |
            result/nix-portable-*
